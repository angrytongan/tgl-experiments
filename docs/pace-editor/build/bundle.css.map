{
  "version": 3,
  "file": "bundle.css",
  "sources": [
    "App.svelte",
    "DragDropArea.svelte",
    "ECharts.svelte"
  ],
  "sourcesContent": [
    "<script>\n    /*\n     * XXX This needs a full rewrite.\n     */\n\n    /*\n     * Test data:\n     * - Mat Fraser 2020 Event 1: https://youtu.be/Gvlkrm873JE\n     * - Noah Olsen 2020 Event 1: https://www.youtube.com/watch?v=AFwnldzWMyw\n     * - Chandler Smith 2020 Event 1: https://www.youtube.com/watch?v=_v46FIlNODU\n     */\n\n    import VideoYouTube from './components/VideoYouTube.svelte';\n    import DragDropArea from './components/DragDropArea.svelte';\n    import { data, currentTime, zoom } from './components/stores.js';\n    import EventChart from './charts/EventChart.svelte';\n    import { saveAs } from 'file-saver';\n    import luxon from 'luxon';\n    import { validatePerformance, packagePerformance } from './utils/download.js';\n\n    let videoCmd = {\n        operation: 'none',\n        seconds: 0,\n    };\n\n    let selectedEvent = null;\n\n    const handleChartClick = (e) => {\n        eventAtTimestamp(e.detail.timestamp);\n        selectedEvent = e.detail.type;              // save selected event\n\n        document.getElementById('control-centre').focus();\n        controlCentreFocus(1);\n    };\n\n    const handleChartDataZoom = (e) => {\n        zoom.set({\n            start: e.detail.start,\n            end: e.detail.end,\n        });\n    };\n\n    const playerConfig = {\n        shuttleSeconds: 5,\n        playbackSpeed: 1,\n    };\n\n    const eventAdd = () => {\n        if (currentMovement != -1) {\n            data.addEvent($currentTime, movements[currentMovement].name, {});\n        }\n    };\n    const eventAddEnd = () => {\n        if (currentMovement != -1) {\n            data.addEvent($currentTime, `${movements[currentMovement].name}:end`, {});\n        }\n    };\n    const eventAddNoRep = () => {\n        if (currentMovement != -1) {\n            data.addEvent($currentTime, `${movements[currentMovement].name}:no-rep`, {});\n        }\n    };\n    const eventAddEndStart = () => {\n        if (currentMovement != -1) {\n            const now = $currentTime;\n            data.addEvent(now, `${movements[currentMovement].name}:end`, {});\n            data.addEvent(now, movements[currentMovement].name, {});\n        }\n    };\n    const eventDelete = () => {\n        const idx = $data.findIndex((d) => d.timestamp == $currentTime);\n\n        if (idx != -1) {\n            /*\n             * If we clicked on the event from the graph, we want to\n             * delete that event type. If we didn't, delete the selected\n             * movement.\n             */\n            if (selectedEvent) {\n                data.delEvent($currentTime, selectedEvent);\n            } else {\n                data.delEvent($currentTime, movements[currentMovement].name);\n            }\n        }\n    };\n    const eventPrevious = () => {\n        let idx = $data.findIndex((d) => d.timestamp >= $currentTime);\n\n        if (idx == -1) {\n            idx = $data.length;\n        }\n        if (idx > 0) {\n            idx--;\n        }\n\n        // console.log('eventPrev: go to ', idx, '(', $data[idx].timestamp, ')');\n\n        videoCmd.operation = 'seekToAndPause';\n        videoCmd.seconds = $data[idx].timestamp;\n    };\n    const eventNext = () => {\n        let idx = $data.findIndex((d) => d.timestamp > $currentTime);\n\n        if (idx == -1) {\n            idx = $data.length - 1;\n        }\n        if (idx == -1) {\n            return;\n        }\n\n        // console.log('eventNext: go to ', idx, '(', $data[idx].timestamp, ')');\n\n        videoCmd.operation = 'seekToAndPause';\n        videoCmd.seconds = $data[idx].timestamp;\n    };\n    const eventClearAll = () => {\n        data.clearEvents();\n        zoom.clear();\n        $currentTime = 0;\n    };\n    const eventAtTimestamp = (secs) => {\n        let idx = $data.findIndex((d) => d.timestamp == secs);\n        if (idx == -1) {\n            idx = 0;\n        }\n\n        videoCmd.operation = 'seekToAndPause';\n        videoCmd.seconds = $data[idx].timestamp;\n    };\n\n    const videoShuttleBackward = () => {\n        videoCmd.operation = 'shuttle';\n        videoCmd.seconds = -playerConfig.shuttleSeconds;\n    };\n    const videoShuttleForward = () => {\n        videoCmd.operation = 'shuttle';\n        videoCmd.seconds = playerConfig.shuttleSeconds;\n    };\n    const videoPlayToggle = () => {\n        videoCmd.operation = 'togglePlay';\n    };\n    const videoIncreasePlaybackSpeed = () => {\n        videoCmd.operation = 'increasePlaybackRate';\n    };\n    const videoDecreasePlaybackSpeed = () => {\n        videoCmd.operation = 'decreasePlaybackRate';\n    };\n\n    // Movement\n    let movements = [\n        { id: 1, name: 'Go', },\n        { id: 2, name: 'Stop', },\n        { id: 3, name: 'Round', },\n    ];\n    let newMovement = '';\n    let currentMovement = movements.length > 0 ? 0 : -1;\n    const insertMovement = (newM) => {\n        if (movements.findIndex((m) => m.name == newM) == -1) {\n            const nextId = movements.reduce((acc, val) => val.id > acc ? val.id : acc, 0) + 1;\n            movements = [ ...movements, { id: nextId, name: newM } ];\n            currentMovement = movements.length - 1;\n        }\n    };\n    const addMovement = () => {\n        if (newMovement) {\n            insertMovement(newMovement);\n            newMovement = '';\n        }\n    };\n    const deleteMovement = (id) => {\n        movements = movements.filter((m) => m.id != id);\n        currentMovement = movements.length > 0 ? 0 : -1;\n    }\n    const movementPrevious = () => {\n        if (currentMovement - 1 >= 0) {\n            currentMovement--;\n        }\n    };\n    const movementNext = () => {\n        if (currentMovement + 1 < movements.length) {\n            currentMovement++;\n        }\n    };\n\n    let controlCentreHasFocus = false;\n    const controlCentreFocus = (focus) => {\n        controlCentreHasFocus = focus;\n    };\n\n    const dataDownload = () => {\n        let errors = validatePerformance($data);\n\n        if (videoEvent == '') {\n            errors += 'Missing video description.\\n';\n        }\n        if (videoAthlete == '') {\n            errors += 'Missing athlete name.\\n';\n        }\n\n        /*\n         * XXX these two are validation; should be moved into\n         * packagePerformance().\n         */\n        if ($data.findIndex((d) => d.type == 'Go') == -1) {\n            errors += 'Missing start marker.\\n';\n        }\n        if ($data.findIndex((d) => d.type == 'Stop') == -1) {\n            errors += 'Missing stop marker.\\n';\n        }\n\n        const perf = packagePerformance(videoAthlete, videoEvent, youtubeURL, $data);\n\n        if (perf.rounds.length == 0) {\n            errors += 'No rounds in performance.\\n';\n        }\n\n        if (errors) {\n            alert('Export errors:\\n' + errors);\n            return;\n        }\n\n        editTimerStop();\n\n        const blob = new Blob([JSON.stringify(perf)], { type: 'application/json;charset=utf-8' });\n        saveAs(blob, Date.now() + '.json');\n    };\n\n    /*\n     * YouTube videoId mangling. YouTube URLs may appear as:\n     *\n     * (1) https://youtu.be/Gvlkrm873JE\n     * (2) https://www.youtube.com/watch?v=Gvlkrm873JE\n     * (3) https://www.youtube.com/watch?v=OBnD5Q0xOLw&ab_channel=CrossFitGames\n     */\n    let videoEvent = '';\n    let videoAthlete = '';\n    let youtubeURL = '';\n    let videoId = '';\n    const changeYouTubeURL = () => {\n        let out = '';\n        let found = '';\n        const re = /v=(.+)/;\n\n        out = youtubeURL\n            .replace(/^.*\\//, '')           // strip scheme, domain name, path\n            .replace(/^.*\\?/, '');          // strip rest of url\n\n        if (out.includes('=')) {            // we have parameters\n            out = out.split('&');           // get tokens\n\n            out.some((token) => {           // handle (3)\n                found = token.match(re);    // (2) and (3)\n\n                if (found !== null) {\n                    videoId = found[1];\n                    return true;\n                }\n                return false;\n            });\n        } else {\n            videoId = out;                  // possible match (1)\n        }\n    }\n\n    const resetReload = () => {\n        changeYouTubeURL();\n        eventClearAll();\n        editTimerRestart();\n    };\n\n    const keymap = [\n        { key: 'r', fn: eventAdd,           description: 'Record movement' },\n        { key: 't', fn: eventAddEnd,        description: 'Record end of movement' },\n        { key: 'y', fn: eventAddNoRep,      description: 'Record no-rep of previous movement' },\n        { key: 'e', fn: eventAddEndStart,   description: 'Record simultaneous end and start of movement' },\n        { key: 'h', fn: eventPrevious,      description: 'Jump to previous event' },\n        { key: 'l', fn: eventNext,          description: 'Jump to next event' },\n        { key: 'x', fn: eventDelete,        description: 'Delete current event' },\n        { key: 'c', fn: eventClearAll,      description: 'Clear all events' },\n\n        { key: 'j', fn: movementNext,       description: 'Choose next movement' },\n        { key: 'k', fn: movementPrevious,   description: 'Choose previous movement' },\n\n        { key: 'a', fn: videoShuttleBackward,       description: 'Back 5 seconds' },\n        { key: 'f', fn: videoShuttleForward,        description: 'Forward 5 seconds' },\n        { key: ' ', fn: videoPlayToggle,            description: 'Play / pause' },\n        { key: '=', fn: videoIncreasePlaybackSpeed, description: 'Increase playback speed' },\n        { key: '-', fn: videoDecreasePlaybackSpeed, description: 'Decrease playback speed' },\n\n        { key: 'd', fn: dataDownload,        description: 'Download events' },\n    ];\n    const handleKeyDown = (e) => {\n        const f = keymap.find((k) => k.key == e.key);\n        if (f) {\n            f.fn();\n        }\n    };\n\n    const keyboardHelp = keymap.reduce((acc, v) => {\n        return acc + `${v.key}: ${v.description}\\n`;\n    }, '');\n\n    let timerId = 0;\n    let editTimer = 0;\n    const editTimerRestart = () => {\n        editTimer = 0;\n        if (timerId) {\n            clearInterval(timerId);\n        }\n        timerId = setInterval(() => {\n            editTimer++;\n        }, 1000);\n    };\n    const editTimerStop = () => {\n        clearInterval(timerId);\n    };\n\n    const loadPreviousWorkout = (perfFile) => {\n        let err = '';\n        let json;\n\n        try {\n            json = JSON.parse(perfFile.detail);\n\n            if (json.athlete == undefined) {\n                err += 'Missing athlete.\\n';\n            }\n            if (json.workout == undefined) {\n                err += 'Missing event name.\\n';\n            }\n            if (json.youtubeurl == undefined) {\n                err += 'Missing YouTube URL.\\n';\n            }\n\n            if (err == '') {\n                videoAthlete = json.athlete;\n                videoEvent = json.workout;\n                youtubeURL = json.youtubeurl;\n\n                eventClearAll();\n\n                data.addEvent(json.start, 'Go');\n                data.addEvent(json.end, 'Stop');\n\n                json.rounds.forEach((r) => {\n                    const name = r.name;\n\n                    data.addEvent(r.start, 'Round', {});\n                    data.addEvent(r.end, 'Round:end', {});\n\n                    r.movements.forEach((m) => {\n                        const name = m.name;\n                        m.events.forEach((e) => {\n                            data.addEvent(e.start, name, {});\n                            data.addEvent(e.end, name + (e.nr ? ':no-rep' : ':end'), {});\n                            insertMovement(name);\n                        });\n                    });\n                });\n\n                changeYouTubeURL();\n                editTimerRestart();\n            }\n        } catch (error) {\n            err += 'Unable to load .json file: ' + error + '\\n';\n        }\n\n        if (err) {\n            alert(err);\n        }\n    };\n</script>\n\n<main>\n    <div id=\"video-details\">\n        <form on:submit|preventDefault={resetReload}>\n            <DragDropArea\n                on:loadedFile={loadPreviousWorkout}\n            >Drop previously generated file</DragDropArea>\n            <input size=\"20\" placeholder=\"Athlete\" type=\"text\" bind:value={videoAthlete} />\n            <input size=\"20\" placeholder=\"Event\" type=\"text\" bind:value={videoEvent} />\n            <input size=\"20\" placeholder=\"YouTube URL\" type=\"text\" bind:value={youtubeURL} />\n            <button type=\"submit\">Load Video</button>\n            {luxon.Duration.fromObject({ seconds: editTimer }).toFormat('mm:ss')}\n        </form>\n    </div>\n\n    <VideoYouTube videoId={videoId} cmd={videoCmd}></VideoYouTube>\n\n    <div id=\"movement-list\">\n        <form on:submit|preventDefault={addMovement}>\n            <input placeholder=\"Movement\" type=\"text\" bind:value={newMovement} />\n        </form>\n        <ul>\n            {#each movements as movement, i (movement.id)}\n                <li>\n                    <button\n                        class:selected=\"{i == currentMovement}\"\n                        on:click={() => deleteMovement(movement.id)}>X</button>\n                    {movement.name}\n                </li>\n            {/each}\n        </ul>\n    </div>\n\n    <!--\n    This was (and should be) a button, but focus on buttons is an issue on\n    Safari:\n    - https://developer.mozilla.org/en-US/docs/Web/HTML/Element/button#clicking_and_focus\n    - https://bugs.webkit.org/show_bug.cgi?id=22261\n    -->\n    <p\n        id=\"control-centre\"\n        class:selected=\"{controlCentreHasFocus}\"\n        tabIndex=\"0\"\n        on:click={() => controlCentreFocus(1)}\n        on:blur={() => controlCentreFocus(0)}\n        on:keydown|preventDefault={handleKeyDown}\n        title={keyboardHelp}\n    >\n        {#if controlCentreHasFocus}\n            {#if selectedEvent == null}\n                No selected event type\n            {:else}\n                Selected event is {selectedEvent}\n            {/if}\n        {:else}\n            Click here to use keyboard interface\n        {/if}\n    </p>\n\n    <div id=\"event-chart\">\n        <EventChart\n            id=\"c1\"\n            on:chartClick={handleChartClick}\n            on:chartDataZoom={handleChartDataZoom}\n        ></EventChart>\n    </div>\n\n    <!--\n    <div id=\"debug\">\n        <pre>{JSON.stringify($data, null, '\\t')}</pre>\n    </div>\n    -->\n</main>\n\n<style>\n    .selected {\n        background: #ff3e00;\n        color: #fff;\n    }\n    main {\n        display: grid;\n        grid-template-columns: 1fr 1em 1fr;\n    }\n    #video-details,\n    #control-centre,\n    #event-chart {\n        grid-column-start: 1;\n        grid-column-end: 4;\n    }\n    #movement-list {\n        grid-column-start: 3;\n        grid-column-end: 4;\n    }\n    #control-centre {\n        text-align: center;\n        margin: 1em 0;\n    }\n    #movement-list ul {\n        list-style: none;\n        display: inline-grid;\n        grid-template-rows: repeat(9, auto);\n        grid-auto-flow: column;\n        margin-top: 0;\n        margin-bottom: 0;\n        padding-left: 0;\n    }\n    #movement-list li {\n        font-size: smaller;\n    }\n</style>\n",
    "<script>\n    import dragDrop from 'drag-drop';\n    import { onMount, createEventDispatcher } from 'svelte';\n\n    const dispatch = createEventDispatcher();\n\n    onMount(() => {\n        const removeDragDropArea = dragDrop('#dragDropArea', (files) => {\n            files.forEach((f) => {\n                const reader = new FileReader();\n                reader.addEventListener('load', (e) => {\n                    dispatch('loadedFile', reader.result);\n                });\n                reader.readAsText(f);\n            });\n        });\n\n        return () => {\n            removeDragDropArea();\n        };\n    });\n\n</script>\n\n<div id=\"dragDropArea\">\n    <slot></slot>\n</div>\n\n<style>\n    #dragDropArea {\n        height: 40px;\n        line-height: 40px;\n        text-align: center;\n\n        border: 1px solid #000;\n        border-style: dashed;\n        border-radius: 5px;\n        margin-bottom: 0.5em;\n    }\n\n    /*\n     * svelte doesn't do class add / remove programatically:\n     * https://github.com/sveltejs/svelte/issues/1594#issuecomment-405269805\n     *\n     * Suggestion is to put this in global.\n     */\n    :global(.drag) {\n        color: #fff;\n        background-color: #000;\n    }\n</style>\n",
    "<script>\n    import { onMount, onDestroy, createEventDispatcher } from 'svelte';\n    import * as echarts from 'echarts';\n\n    const dispatch = createEventDispatcher();\n\n    export let id;\n    export let height = 200;\n    export let options = {\n        title: {\n            text: 'Empty chart',\n        },\n    };\n\n    let chart;\n    let resizeTimer = null;\n    const resizeDebounceTime = 500; // ms\n\n    // XXX check me\n    $: chart && chart.setOption(options, true);\n\n    onMount(() => {\n        chart = echarts.init(document.getElementById(id));\n        chart.setOption(options);\n\n        window.addEventListener('resize', onResize);\n\n        chart.on('click', (p) => {\n            dispatch('chartClick', p.data);\n        });\n\n        chart.on('dataZoom', (p) => {\n            dispatch('chartDataZoom', p);\n        });\n    });\n\n    onDestroy(() => {\n        if (chart != undefined) {\n            chart.dispose(id);\n            window.removeEventListener('resize', onResize);\n        }\n    });\n\n    const onResize = () => {\n        if (chart != undefined && resizeTimer == null) {\n            if (resizeTimer == null) {\n                resizeTimer = setTimeout(() => {\n                    chart.resize();\n                    resizeTimer = null\n                }, resizeDebounceTime);\n            }\n        }\n    };\n</script>\n\n<div\n    class=\"chart\"\n    style=\"height: {height}px\"\n    id={id}\n    on:resize={onResize}\n></div>\n\n<style>\n    .chart {\n        width: 100%;\n    }\n</style>\n"
  ],
  "names": [],
  "mappings": "AA+bI,SAAS,8BAAC,CAAC,AACP,UAAU,CAAE,OAAO,CACnB,KAAK,CAAE,IAAI,AACf,CAAC,AACD,IAAI,8BAAC,CAAC,AACF,OAAO,CAAE,IAAI,CACb,qBAAqB,CAAE,GAAG,CAAC,GAAG,CAAC,GAAG,AACtC,CAAC,AACD,4CAAc,CACd,6CAAe,CACf,YAAY,8BAAC,CAAC,AACV,iBAAiB,CAAE,CAAC,CACpB,eAAe,CAAE,CAAC,AACtB,CAAC,AACD,cAAc,8BAAC,CAAC,AACZ,iBAAiB,CAAE,CAAC,CACpB,eAAe,CAAE,CAAC,AACtB,CAAC,AACD,eAAe,8BAAC,CAAC,AACb,UAAU,CAAE,MAAM,CAClB,MAAM,CAAE,GAAG,CAAC,CAAC,AACjB,CAAC,AACD,6BAAc,CAAC,EAAE,eAAC,CAAC,AACf,UAAU,CAAE,IAAI,CAChB,OAAO,CAAE,WAAW,CACpB,kBAAkB,CAAE,OAAO,CAAC,CAAC,CAAC,IAAI,CAAC,CACnC,cAAc,CAAE,MAAM,CACtB,UAAU,CAAE,CAAC,CACb,aAAa,CAAE,CAAC,CAChB,YAAY,CAAE,CAAC,AACnB,CAAC,AACD,6BAAc,CAAC,EAAE,eAAC,CAAC,AACf,SAAS,CAAE,OAAO,AACtB,CAAC;ACncD,aAAa,cAAC,CAAC,AACX,MAAM,CAAE,IAAI,CACZ,WAAW,CAAE,IAAI,CACjB,UAAU,CAAE,MAAM,CAElB,MAAM,CAAE,GAAG,CAAC,KAAK,CAAC,IAAI,CACtB,YAAY,CAAE,MAAM,CACpB,aAAa,CAAE,GAAG,CAClB,aAAa,CAAE,KAAK,AACxB,CAAC,AAQO,KAAK,AAAE,CAAC,AACZ,KAAK,CAAE,IAAI,CACX,gBAAgB,CAAE,IAAI,AAC1B,CAAC;ACcD,MAAM,cAAC,CAAC,AACJ,KAAK,CAAE,IAAI,AACf,CAAC"
}